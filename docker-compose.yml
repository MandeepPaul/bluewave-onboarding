services:
  onboarding_backend:
    image: onboarding/onboarding:v0
    build: ./backend
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - db
    env_file:
      - ./backend/.env
    environment:
      - NODE_ENV=${NODE_ENV}
      - JWT_SECRET=${JWT_SECRET}
      - EMAIL=${EMAIL}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_ENABLE=${EMAIL_ENABLE}
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - node_modules/
            - .git/
            - "*.log"
            - coverage/
            - dist/
    command: >
      bash -c "if [ "$NODE_ENV" = "production" ]; then
        if ! npx sequelize-cli db:migrate; then
          if ! npx sequelize-cli db:create; then
            echo 'Database already exists';
          fi
          npx sequelize-cli db:migrate;
        fi
      fi;
      if [ \"$$NODE_ENV\" = \"production\" ]; then
        npm run prod;
      elif [ \"$$NODE_ENV\" = \"staging\" ]; then
        npm run staging;
      else
        npm run dev;
      fi"
  db:
    image: postgres:latest
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "4173:4173"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    command: >
        bash -c "
          if [ \"$NODE_ENV\" = \"development\" ]; then
            npm run dev;
          elif [ \"$NODE_ENV\" != \"development\" ]; then
            npm run build && npm run preview;
          fi"
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  pgdata:
